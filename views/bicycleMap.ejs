<!doctype html>
<html>
    <head>
        <title>bicycleMap</title>
        <script type="text/javascript" src="//apis.daum.net/maps/maps3.js?apikey=05773f117e634e194f7f2308134d4e7f"></script>
        <script src="/javascripts/AddrToJs.js"></script>

    </head>
    <body>
        <div class="container" id="map" style="width:700px;height:500px;"></div>
        <div class="container">
	        <div></div>
	    <div><button id="bicycleRoad" class="btn btn-info" onclick="bicycleRoad()">자전거도로 보기</button></div>
        </div>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
        <script type="text/javascript">
var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
var options = { //지도를 생성할 때 필요한 기본 옵션
	center: new daum.maps.LatLng(37.623067, 127.041458), //지도의 중심좌표.
	level: 5 //지도의 레벨(확대, 축소 정도)
};

var map = new daum.maps.Map(container, options); //지도 생성 및 객체 리턴

var mapTypeControl = new daum.maps.MapTypeControl();//첫번째 지도 컨트롤러 설정(일반뷰, 스카이뷰)
map.addControl(mapTypeControl, daum.maps.ControlPosition.TOPRIGHT);

var zoomControl = new daum.maps.ZoomControl();//두번째 지도 컨트롤러 설정(zoom기능)
map.addControl(zoomControl, daum.maps.ControlPosition.RIGHT);

var isRoad = true;

var bicycleData;
$.getJSON('/write/서울시자전거공기주입기설치현황.json', function(data){
	bicycleData = data;
});
function bicycleRoad(){
	if(isRoad)
	{
		map.addOverlayMapTypeId(daum.maps.MapTypeId.BICYCLE);
		isRoad = false;
	}
	else
	{
		map.removeOverlayMapTypeId(daum.maps.MapTypeId.BICYCLE);
		isRoad = true;
	}
}
for(var i = 0; i<positions.length;i++)
{
	var marker = new daum.maps.Marker({
		map: map,
		position: positions[i].latlng
	});
	
	var infowindow = new daum.maps.InfoWindow({
		content: positions[i].content
	});
	daum.maps.event.addListener(marker,'mouseover',makeOverListener(map, marker, infowindow));
	daum.maps.event.addListener(marker,'mouseout',makeOutListener(infowindow));
	daum.maps.event.addListener(marker,'click',makeClickListner(i+1));
}
function makeOverListener(map, marker, infowindow)
{
	return function(){ infowindow.open(map, marker); };
}
function makeOutListener(infowindow)
{
	return function(){ infowindow.close();};
}
function makeClickListner(i){
	return function(){ console.log(bicycleData[i].SET_LOC +" "+bicycleData[i].SET_PLACE);};
}
</script>

</body>
</html>